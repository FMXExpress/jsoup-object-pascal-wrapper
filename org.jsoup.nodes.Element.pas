//
// Generated by JavaToPas v1.5 20160713 - 141449
////////////////////////////////////////////////////////////////////////////////
unit org.jsoup.nodes.Element;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  org.jsoup.parser.Tag,
  java.util.regex.Pattern,
  org.jsoup.nodes.Attributes,
  org.jsoup.nodes.Document,
  org.jsoup.nodes.TextNode,
  java.lang.Appendable,
  org.jsoup.nodes.Document_OutputSettings,
  org.jsoup.select.NodeVisitor;

type
  JElements = interface; // merged
  JElement = interface;

  JElementClass = interface(JObjectClass)
    ['{1A0F756D-A6F5-468A-B306-EED534E62E9B}']
    function addClass(className : JString) : JElement; cdecl;                   // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function after(html : JString) : JElement; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function after(node : JNode) : JElement; cdecl; overload;                   // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function append(html : JString) : JElement; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function appendChild(child : JNode) : JElement; cdecl;                      // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function appendElement(tagName : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function appendText(text : JString) : JElement; cdecl;                      // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JElement; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function attr(attributeKey : JString; attributeValue : boolean) : JElement; cdecl; overload;// (Ljava/lang/String;Z)Lorg/jsoup/nodes/Element; A: $1
    function before(html : JString) : JElement; cdecl; overload;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function before(node : JNode) : JElement; cdecl; overload;                  // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function child(&index : Integer) : JElement; cdecl;                         // (I)Lorg/jsoup/nodes/Element; A: $1
    function children : JElements; cdecl;                                       // ()Lorg/jsoup/select/Elements; A: $1
    function className : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function classNames : JSet; cdecl; overload;                                // ()Ljava/util/Set; A: $1
    function classNames(classNames : JSet) : JElement; cdecl; overload;         // (Ljava/util/Set;)Lorg/jsoup/nodes/Element; A: $1
    function clone : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function cssSelector : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function data : JString; cdecl;                                             // ()Ljava/lang/String; A: $1
    function dataNodes : JList; cdecl;                                          // ()Ljava/util/List; A: $1
    function dataset : JMap; cdecl;                                             // ()Ljava/util/Map; A: $1
    function elementSiblingIndex : JInteger; cdecl;                             // ()Ljava/lang/Integer; A: $1
    function empty : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function firstElementSibling : JElement; cdecl;                             // ()Lorg/jsoup/nodes/Element; A: $1
    function getAllElements : JElements; cdecl;                                 // ()Lorg/jsoup/select/Elements; A: $1
    function getElementById(id : JString) : JElement; cdecl;                    // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function getElementsByAttribute(key : JString) : JElements; cdecl;          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeStarting(keyPrefix : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValue(key : JString; value : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueContaining(key : JString; match : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueEnding(key : JString; valueSuffix : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueMatching(key : JString; pattern : JPattern) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueMatching(key : JString; regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueNot(key : JString; value : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueStarting(key : JString; valuePrefix : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByClass(className : JString) : JElements; cdecl;        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexEquals(&index : Integer) : JElements; cdecl;     // (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexGreaterThan(&index : Integer) : JElements; cdecl;// (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexLessThan(&index : Integer) : JElements; cdecl;   // (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByTag(tagName : JString) : JElements; cdecl;            // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsContainingOwnText(searchText : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsContainingText(searchText : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingOwnText(pattern : JPattern) : JElements; cdecl; overload;// (Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingOwnText(regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingText(pattern : JPattern) : JElements; cdecl; overload;// (Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingText(regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function hasClass(className : JString) : boolean; cdecl;                    // (Ljava/lang/String;)Z A: $1
    function hasText : boolean; cdecl;                                          // ()Z A: $1
    function html : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function html(appendable : JAppendable) : JAppendable; cdecl; overload;     // (Ljava/lang/Appendable;)Ljava/lang/Appendable; A: $1
    function html(html : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function id : JString; cdecl;                                               // ()Ljava/lang/String; A: $1
    function init(tag : JTag; baseUri : JString) : JElement; cdecl; overload;   // (Lorg/jsoup/parser/Tag;Ljava/lang/String;)V A: $1
    function init(tag : JTag; baseUri : JString; attributes : JAttributes) : JElement; cdecl; overload;// (Lorg/jsoup/parser/Tag;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V A: $1
    function insertChildren(&index : Integer; children : JCollection) : JElement; cdecl;// (ILjava/util/Collection;)Lorg/jsoup/nodes/Element; A: $1
    function isBlock : boolean; cdecl;                                          // ()Z A: $1
    function lastElementSibling : JElement; cdecl;                              // ()Lorg/jsoup/nodes/Element; A: $1
    function nextElementSibling : JElement; cdecl;                              // ()Lorg/jsoup/nodes/Element; A: $1
    function nodeName : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function ownText : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function parent : JElement; cdecl;                                          // ()Lorg/jsoup/nodes/Element; A: $11
    function parents : JElements; cdecl;                                        // ()Lorg/jsoup/select/Elements; A: $1
    function prepend(html : JString) : JElement; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function prependChild(child : JNode) : JElement; cdecl;                     // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function prependElement(tagName : JString) : JElement; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function prependText(text : JString) : JElement; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function previousElementSibling : JElement; cdecl;                          // ()Lorg/jsoup/nodes/Element; A: $1
    function removeClass(className : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function select(cssQuery : JString) : JElements; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function siblingElements : JElements; cdecl;                                // ()Lorg/jsoup/select/Elements; A: $1
    function tag : JTag; cdecl;                                                 // ()Lorg/jsoup/parser/Tag; A: $1
    function tagName : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function tagName(tagName : JString) : JElement; cdecl; overload;            // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function text : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function text(text : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function textNodes : JList; cdecl;                                          // ()Ljava/util/List; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toggleClass(className : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function val : JString; cdecl; overload;                                    // ()Ljava/lang/String; A: $1
    function val(value : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function wrap(html : JString) : JElement; cdecl;                            // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
  end;

  [JavaSignature('org/jsoup/nodes/Element')]
  JElement = interface(JObject)
    ['{9911C03E-D072-4008-8FB4-59DD5B591C89}']
    function addClass(className : JString) : JElement; cdecl;                   // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function after(html : JString) : JElement; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function after(node : JNode) : JElement; cdecl; overload;                   // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function append(html : JString) : JElement; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function appendChild(child : JNode) : JElement; cdecl;                      // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function appendElement(tagName : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function appendText(text : JString) : JElement; cdecl;                      // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JElement; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function attr(attributeKey : JString; attributeValue : boolean) : JElement; cdecl; overload;// (Ljava/lang/String;Z)Lorg/jsoup/nodes/Element; A: $1
    function before(html : JString) : JElement; cdecl; overload;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function before(node : JNode) : JElement; cdecl; overload;                  // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function child(&index : Integer) : JElement; cdecl;                         // (I)Lorg/jsoup/nodes/Element; A: $1
    function children : JElements; cdecl;                                       // ()Lorg/jsoup/select/Elements; A: $1
    function className : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function classNames : JSet; cdecl; overload;                                // ()Ljava/util/Set; A: $1
    function classNames(classNames : JSet) : JElement; cdecl; overload;         // (Ljava/util/Set;)Lorg/jsoup/nodes/Element; A: $1
    function clone : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function cssSelector : JString; cdecl;                                      // ()Ljava/lang/String; A: $1
    function data : JString; cdecl;                                             // ()Ljava/lang/String; A: $1
    function dataNodes : JList; cdecl;                                          // ()Ljava/util/List; A: $1
    function dataset : JMap; cdecl;                                             // ()Ljava/util/Map; A: $1
    function elementSiblingIndex : JInteger; cdecl;                             // ()Ljava/lang/Integer; A: $1
    function empty : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function firstElementSibling : JElement; cdecl;                             // ()Lorg/jsoup/nodes/Element; A: $1
    function getAllElements : JElements; cdecl;                                 // ()Lorg/jsoup/select/Elements; A: $1
    function getElementById(id : JString) : JElement; cdecl;                    // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function getElementsByAttribute(key : JString) : JElements; cdecl;          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeStarting(keyPrefix : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValue(key : JString; value : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueContaining(key : JString; match : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueEnding(key : JString; valueSuffix : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueMatching(key : JString; pattern : JPattern) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueMatching(key : JString; regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueNot(key : JString; value : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByAttributeValueStarting(key : JString; valuePrefix : JString) : JElements; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByClass(className : JString) : JElements; cdecl;        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexEquals(&index : Integer) : JElements; cdecl;     // (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexGreaterThan(&index : Integer) : JElements; cdecl;// (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByIndexLessThan(&index : Integer) : JElements; cdecl;   // (I)Lorg/jsoup/select/Elements; A: $1
    function getElementsByTag(tagName : JString) : JElements; cdecl;            // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsContainingOwnText(searchText : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsContainingText(searchText : JString) : JElements; cdecl;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingOwnText(pattern : JPattern) : JElements; cdecl; overload;// (Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingOwnText(regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingText(pattern : JPattern) : JElements; cdecl; overload;// (Ljava/util/regex/Pattern;)Lorg/jsoup/select/Elements; A: $1
    function getElementsMatchingText(regex : JString) : JElements; cdecl; overload;// (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function hasClass(className : JString) : boolean; cdecl;                    // (Ljava/lang/String;)Z A: $1
    function hasText : boolean; cdecl;                                          // ()Z A: $1
    function html : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function html(appendable : JAppendable) : JAppendable; cdecl; overload;     // (Ljava/lang/Appendable;)Ljava/lang/Appendable; A: $1
    function html(html : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function id : JString; cdecl;                                               // ()Ljava/lang/String; A: $1
    function insertChildren(&index : Integer; children : JCollection) : JElement; cdecl;// (ILjava/util/Collection;)Lorg/jsoup/nodes/Element; A: $1
    function isBlock : boolean; cdecl;                                          // ()Z A: $1
    function lastElementSibling : JElement; cdecl;                              // ()Lorg/jsoup/nodes/Element; A: $1
    function nextElementSibling : JElement; cdecl;                              // ()Lorg/jsoup/nodes/Element; A: $1
    function nodeName : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function ownText : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function parents : JElements; cdecl;                                        // ()Lorg/jsoup/select/Elements; A: $1
    function prepend(html : JString) : JElement; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function prependChild(child : JNode) : JElement; cdecl;                     // (Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element; A: $1
    function prependElement(tagName : JString) : JElement; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function prependText(text : JString) : JElement; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function previousElementSibling : JElement; cdecl;                          // ()Lorg/jsoup/nodes/Element; A: $1
    function removeClass(className : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function select(cssQuery : JString) : JElements; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function siblingElements : JElements; cdecl;                                // ()Lorg/jsoup/select/Elements; A: $1
    function tag : JTag; cdecl;                                                 // ()Lorg/jsoup/parser/Tag; A: $1
    function tagName : JString; cdecl; overload;                                // ()Ljava/lang/String; A: $1
    function tagName(tagName : JString) : JElement; cdecl; overload;            // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function text : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function text(text : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function textNodes : JList; cdecl;                                          // ()Ljava/util/List; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toggleClass(className : JString) : JElement; cdecl;                // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function val : JString; cdecl; overload;                                    // ()Ljava/lang/String; A: $1
    function val(value : JString) : JElement; cdecl; overload;                  // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
    function wrap(html : JString) : JElement; cdecl;                            // (Ljava/lang/String;)Lorg/jsoup/nodes/Element; A: $1
  end;

  TJElement = class(TJavaGenericImport<JElementClass, JElement>)
  end;

  // Merged from: .\org.jsoup.select.Elements.pas
  JElementsClass = interface(JObjectClass)
    ['{2F81EC75-D14A-4C04-BFB6-84D97936D8E6}']
    function &is(query : JString) : boolean; cdecl;                             // (Ljava/lang/String;)Z A: $1
    function &not(query : JString) : JElements; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function addClass(className : JString) : JElements; cdecl;                  // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function after(html : JString) : JElements; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function append(html : JString) : JElements; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function attr(attributeKey : JString) : JString; cdecl; overload;           // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function before(html : JString) : JElements; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function clone : JElements; cdecl;                                          // ()Lorg/jsoup/select/Elements; A: $1
    function empty : JElements; cdecl;                                          // ()Lorg/jsoup/select/Elements; A: $1
    function eq(&index : Integer) : JElements; cdecl;                           // (I)Lorg/jsoup/select/Elements; A: $1
    function first : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function forms : JList; cdecl;                                              // ()Ljava/util/List; A: $1
    function hasAttr(attributeKey : JString) : boolean; cdecl;                  // (Ljava/lang/String;)Z A: $1
    function hasClass(className : JString) : boolean; cdecl;                    // (Ljava/lang/String;)Z A: $1
    function hasText : boolean; cdecl;                                          // ()Z A: $1
    function html : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function html(html : JString) : JElements; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function init : JElements; cdecl; overload;                                 // ()V A: $1
    function init(elements : JCollection) : JElements; cdecl; overload;         // (Ljava/util/Collection;)V A: $1
    function init(elements : JList) : JElements; cdecl; overload;               // (Ljava/util/List;)V A: $1
    function init(elements : TJavaArray<JElement>) : JElements; cdecl; overload;// ([Lorg/jsoup/nodes/Element;)V A: $81
    function init(initialCapacity : Integer) : JElements; cdecl; overload;      // (I)V A: $1
    function last : JElement; cdecl;                                            // ()Lorg/jsoup/nodes/Element; A: $1
    function outerHtml : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function parents : JElements; cdecl;                                        // ()Lorg/jsoup/select/Elements; A: $1
    function prepend(html : JString) : JElements; cdecl;                        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function remove : JElements; cdecl;                                         // ()Lorg/jsoup/select/Elements; A: $1
    function removeAttr(attributeKey : JString) : JElements; cdecl;             // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function removeClass(className : JString) : JElements; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function select(query : JString) : JElements; cdecl;                        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function tagName(tagName : JString) : JElements; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function text : JString; cdecl;                                             // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toggleClass(className : JString) : JElements; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function traverse(nodeVisitor : JNodeVisitor) : JElements; cdecl;           // (Lorg/jsoup/select/NodeVisitor;)Lorg/jsoup/select/Elements; A: $1
    function unwrap : JElements; cdecl;                                         // ()Lorg/jsoup/select/Elements; A: $1
    function val : JString; cdecl; overload;                                    // ()Ljava/lang/String; A: $1
    function val(value : JString) : JElements; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function wrap(html : JString) : JElements; cdecl;                           // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
  end;

  [JavaSignature('org/jsoup/select/Elements')]
  JElements = interface(JObject)
    ['{F454BC4C-9045-4DFE-A696-DFA0DF92BF9E}']
    function &is(query : JString) : boolean; cdecl;                             // (Ljava/lang/String;)Z A: $1
    function &not(query : JString) : JElements; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function addClass(className : JString) : JElements; cdecl;                  // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function after(html : JString) : JElements; cdecl;                          // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function append(html : JString) : JElements; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function attr(attributeKey : JString) : JString; cdecl; overload;           // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JElements; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function before(html : JString) : JElements; cdecl;                         // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function clone : JElements; cdecl;                                          // ()Lorg/jsoup/select/Elements; A: $1
    function empty : JElements; cdecl;                                          // ()Lorg/jsoup/select/Elements; A: $1
    function eq(&index : Integer) : JElements; cdecl;                           // (I)Lorg/jsoup/select/Elements; A: $1
    function first : JElement; cdecl;                                           // ()Lorg/jsoup/nodes/Element; A: $1
    function forms : JList; cdecl;                                              // ()Ljava/util/List; A: $1
    function hasAttr(attributeKey : JString) : boolean; cdecl;                  // (Ljava/lang/String;)Z A: $1
    function hasClass(className : JString) : boolean; cdecl;                    // (Ljava/lang/String;)Z A: $1
    function hasText : boolean; cdecl;                                          // ()Z A: $1
    function html : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function html(html : JString) : JElements; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function last : JElement; cdecl;                                            // ()Lorg/jsoup/nodes/Element; A: $1
    function outerHtml : JString; cdecl;                                        // ()Ljava/lang/String; A: $1
    function parents : JElements; cdecl;                                        // ()Lorg/jsoup/select/Elements; A: $1
    function prepend(html : JString) : JElements; cdecl;                        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function remove : JElements; cdecl;                                         // ()Lorg/jsoup/select/Elements; A: $1
    function removeAttr(attributeKey : JString) : JElements; cdecl;             // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function removeClass(className : JString) : JElements; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function select(query : JString) : JElements; cdecl;                        // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function tagName(tagName : JString) : JElements; cdecl;                     // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function text : JString; cdecl;                                             // ()Ljava/lang/String; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function toggleClass(className : JString) : JElements; cdecl;               // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function traverse(nodeVisitor : JNodeVisitor) : JElements; cdecl;           // (Lorg/jsoup/select/NodeVisitor;)Lorg/jsoup/select/Elements; A: $1
    function unwrap : JElements; cdecl;                                         // ()Lorg/jsoup/select/Elements; A: $1
    function val : JString; cdecl; overload;                                    // ()Ljava/lang/String; A: $1
    function val(value : JString) : JElements; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
    function wrap(html : JString) : JElements; cdecl;                           // (Ljava/lang/String;)Lorg/jsoup/select/Elements; A: $1
  end;

  TJElements = class(TJavaGenericImport<JElementsClass, JElements>)
  end;


implementation

end.
