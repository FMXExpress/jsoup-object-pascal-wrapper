//
// Generated by JavaToPas v1.5 20160713 - 141451
////////////////////////////////////////////////////////////////////////////////
unit org.jsoup.nodes.TextNode;

interface

uses
  AndroidAPI.JNIBridge,
  Androidapi.JNI.JavaTypes,
  java.lang.Appendable,
  org.jsoup.nodes.Document_OutputSettings,
  org.jsoup.nodes.Attributes,
  org.jsoup.nodes.Document;

type
  JTextNode = interface;

  JTextNodeClass = interface(JObjectClass)
    ['{AAD94FD0-F8D4-498F-916D-B517A132DE3C}']
    function absUrl(attributeKey : JString) : JString; cdecl;                   // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString) : JString; cdecl; overload;           // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JNode; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Node; A: $1
    function attributes : JAttributes; cdecl;                                   // ()Lorg/jsoup/nodes/Attributes; A: $1
    function createFromEncoded(encodedText : JString; baseUri : JString) : JTextNode; cdecl;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/TextNode; A: $9
    function getWholeText : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function hasAttr(attributeKey : JString) : boolean; cdecl;                  // (Ljava/lang/String;)Z A: $1
    function init(text : JString; baseUri : JString) : JTextNode; cdecl;        // (Ljava/lang/String;Ljava/lang/String;)V A: $1
    function isBlank : boolean; cdecl;                                          // ()Z A: $1
    function nodeName : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function removeAttr(attributeKey : JString) : JNode; cdecl;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/Node; A: $1
    function splitText(offset : Integer) : JTextNode; cdecl;                    // (I)Lorg/jsoup/nodes/TextNode; A: $1
    function text : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function text(text : JString) : JTextNode; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/TextNode; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  [JavaSignature('org/jsoup/nodes/TextNode')]
  JTextNode = interface(JObject)
    ['{126BA7F2-58F5-4F0B-B7B4-89B73B2E03A7}']
    function absUrl(attributeKey : JString) : JString; cdecl;                   // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString) : JString; cdecl; overload;           // (Ljava/lang/String;)Ljava/lang/String; A: $1
    function attr(attributeKey : JString; attributeValue : JString) : JNode; cdecl; overload;// (Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Node; A: $1
    function attributes : JAttributes; cdecl;                                   // ()Lorg/jsoup/nodes/Attributes; A: $1
    function getWholeText : JString; cdecl;                                     // ()Ljava/lang/String; A: $1
    function hasAttr(attributeKey : JString) : boolean; cdecl;                  // (Ljava/lang/String;)Z A: $1
    function isBlank : boolean; cdecl;                                          // ()Z A: $1
    function nodeName : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
    function removeAttr(attributeKey : JString) : JNode; cdecl;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/Node; A: $1
    function splitText(offset : Integer) : JTextNode; cdecl;                    // (I)Lorg/jsoup/nodes/TextNode; A: $1
    function text : JString; cdecl; overload;                                   // ()Ljava/lang/String; A: $1
    function text(text : JString) : JTextNode; cdecl; overload;                 // (Ljava/lang/String;)Lorg/jsoup/nodes/TextNode; A: $1
    function toString : JString; cdecl;                                         // ()Ljava/lang/String; A: $1
  end;

  TJTextNode = class(TJavaGenericImport<JTextNodeClass, JTextNode>)
  end;

const
  TJTextNodeTEXT_KEY = 'text';

implementation

end.
